def ancestor(node, parents):
    if parents[node] == node:
        return node
    else:
        return parents[x] = ancestor(parents[node], parents)

def solution(n, costs):
    answer = 0
    edges = sorted([(x[2], x[0], x[1]) for x in costs])
    parents = [i for i in range(n)]
    bridges = 0
    for w, f, t in edges:
        if ancestor(f, parents) != ancestor(t, parents):
            answer += w
            parents[ancestor(t, parents)] = ancestor(f, parents)
            bridges += 1
        if bridges == n - 1:
            break
    return answer

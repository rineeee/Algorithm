def solution(board, skill):
    answer = 0 
    n, m = len(board), len(board[0])
    cost = [[0] * (m+1) for _ in range(n+1)] 
    
    for s in skill:
        types = -1 if s[0] == 1 else 1
        cost[s[1]][s[2]] += s[5]*types
        cost[s[1]][s[4]+1] -= s[5]*types
        
        cost[s[3]+1][s[2]] -= s[5]*types
        cost[s[3]+1][s[4]+1] += s[5]*types
    
    for j in range(n):
        for i in range(1, m):
            cost[j][i] += cost[j][i-1]

    for i in range(m):
        for j in range(1,n):
            cost[j][i] += cost[j-1][i]

    for j in range(n):
        for i in range(m):    
            board[j][i] += cost[j][i]
            if board[j][i] > 0:
                answer += 1

    return answer

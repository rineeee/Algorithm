def possible(result):
    COL, ROW = 0, 1
    for x, y, a in result:
        if a == COL: # 기둥일 때
            if y != 0 and (x, y-1, COL) not in result and \
        (x-1, y, ROW) not in result and (x, y, ROW) not in result:
                return False
        else: # 보일 때
            if (x, y-1, COL) not in result and (x+1, y-1, COL) not in result and \
        not ((x-1, y, ROW) in result and (x+1, y, ROW) in result):
                return False
    return True
    

def solution(n, build_frame):
    answer = set()
    
    for x,y,a,b in build_frame:
        curr = (x,y,a)
        if b:
            answer.add(curr)
            if not possible(answer):
                answer.remove(curr)
        else:
            answer.remove(curr)
            if not possible(answer):
                answer.add(curr)
    
    answer = map(list, answer)
    
    return sorted(answer, key= lambda x: (x[0],x[1],x[2]))
    

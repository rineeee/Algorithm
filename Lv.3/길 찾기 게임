from collections import deque

def solution(nodeinfo):
    answer = [[],[]]
    nodes = [[n[0],n[1],idx+1] for idx, n in enumerate(nodeinfo)]
    nodes = sorted(nodes, key= lambda x: (-x[1], x[0]))
    dic = {}

    for x, y, idx in nodes:        
        dic[idx] = [x,y,None,None]
        curr = nodes[0][2]
        while True:
            if x > dic[curr][0]:
                if dic[curr][3] == None:
                    dic[curr][3] = idx
                    break
                curr = dic[curr][3]
            elif x < dic[curr][0]:
                if dic[curr][2] == None:
                    dic[curr][2] = idx
                    break
                curr = dic[curr][2]
            else:
                break
    
    for idx, order in [[0,[3,2]],[1,[2,3]]]: # pre, post
        stack = [nodes[0][2]] # root
        result = deque()
        while stack:
            curr = stack.pop()
            if idx == 0:
                result.append(curr)
            else:
                result.appendleft(curr)
            
            for child in order:
                if dic[curr][child] != None: 
                    stack.append(dic[curr][child])    
        answer[idx] = list(result)
    return answer
        

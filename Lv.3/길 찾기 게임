from collections import deque

def solution(nodeinfo):
    answer = [[], []]
    nodes = [[nodeinfo[i][0], nodeinfo[i][1], i + 1] for i in range(len(nodeinfo))]   
    nodes = sorted(nodes, key=lambda k: (-k[1], k[0]))
    mdict = {}

    for x, y, idx in nodes:                 
        mdict[idx] = [x, y, None, None]	    
        curr = nodes[0][2]
        while True:
            if x > mdict[curr][0]:         
                if mdict[curr][3] == None:  
                    mdict[curr][3] = idx
                    break
                curr = mdict[curr][3]
            elif x < mdict[curr][0]:        
                if mdict[curr][2] == None:  
                    mdict[curr][2] = idx
                    break
                curr = mdict[curr][2]
            else:
                break
    for idx, order in enumerate([[3,2],[2,3]]): # 0:preorder, 1:postorder
        stack = [nodes[0][2]]                   # root node
        result = deque()
        while stack:
            curr = stack.pop()
            if idx == 0:
                result.append(curr)            
            else:
                result.appendleft(curr)
                
            for child in order:                 
                if mdict[curr][child] != None: 
                    stack.append(mdict[curr][child])
                    
        answer[idx] = list(result)
    return answer

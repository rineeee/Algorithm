def flipColumn(arr, m):
    n = len(arr)
    for i in range(n):
        if arr[i][m] == 1:
            arr[i][m] = 0
        else:
            arr[i][m] = 1


def solution(beginning, target):
    n = 3
    answer = float("inf")
    n, m = len(beginning), len(beginning[0])

    flipped = [[0 if beginning[j][i] else 1 for i in range(m)] for j in range(n)]
    # row 뒤집는 전체 개수
    for unit in range(2**n):
        rowFlipped = []
        flipCnt = 0
        for i in range(n):
            # i번째 수가 있나 없나 확인(0이면 없고, 1 이상이면 있는 것)
            if unit & (1 << i):
                rowFlipped.append(flipped[i][:])
                flipCnt += 1
            else:
                rowFlipped.append(beginning[i][:])
                
        for j in range(m):
            curCol = []
            targetCol = []
            for i in range(n):
                curCol.append(rowFlipped[i][j])
                targetCol.append(target[i][j])
			
            if curCol != targetCol:
                flipColumn(rowFlipped, j)
                flipCnt += 1

        if rowFlipped == target:
            answer = min(answer, flipCnt)

    if answer == float("inf"):
        answer = -1

    return answer

import java.util.*;
class Solution {
    public int solution(int n, int[][] computers) {
        int answer = 0;
        boolean[] visited = new boolean[n];
        for (int i=0; i<n; i++){
            if (!visited[i]){
                bfs(computers, visited, i, n);
                answer ++;
            }
        }
        return answer;
    }
    public void bfs(int[][] computers, boolean[] visited, int idx, int n){
        Queue<Integer> q = new LinkedList<>();
        q.add(idx);
        while (!q.isEmpty()){
            int tmp = q.poll();
            visited[tmp] = true;
            for (int j=0; j<n; j++){
                if(!visited[j] && computers[tmp][j] == 1){
                    q.add(j);
                }
            }
        }
    } 
}

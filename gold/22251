import sys

input = sys.stdin.readline

def recur(number, i, k, p, n, x, start):
    cnt = 0
    if i >= len(x):
        join_x = ''.join(x)
        if join_x == start:
            return 0
        elif 1 <= int(join_x) <= n:
            return 1
        else:
            return 0

    for j in range(10):
        inter = (number[x[i]] | number[str(j)]) - (number[x[i]] & number[str(j)])
        tmp = x[:]
        if j != x[i] and len(inter) <= p:
            tmp[i] = str(j)
            cnt += recur(number, i + 1, k, p - len(inter), n, tmp, start)
        elif j == x[i]:
            cnt += recur(number, i + 1, k, p, n, tmp, start)

    return cnt

def solution(n,k,p,x):
    global answer
    number = {'0': {0,1,3,4,5,6}, '1': {3,6}, '2':{0,2,3,4,5}, '3':{0,2,3,5,6}, '4':{1,2,3,6},
              '5':{0,1,2,5,6}, '6':{0,1,2,4,5,6}, '7':{0,3,6}, '8':{0,1,2,3,4,5,6}, '9':{0,1,2,3,5,6}}
    x = list((k - len(str(x)))*'0'+str(x))

    answer = recur(number, 0, k, p, n, x, ''.join(x))

    return answer


n, k, p, x = map(int, input().split())
print(solution(n,k,p,x))

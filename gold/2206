import sys
from collections import deque
input = sys.stdin.readline

def solution(n, m,maps):
    q = deque()
    q.append((0,0,0))
    visited=[[[0] *2 for _ in range(m)] for _ in range(n)]
    visited[0][0][0] = 1

    while q:
        x, y, status = q.popleft()
        if x == n-1 and y == m-1 :
            return visited[x][y][status]
        for i, j in [(0,1),(0,-1),(1,0),(-1,0)]:
            dx, dy = x+i, y+j
            if 0<=dx<n and 0<=dy<m:
                # 벽 안부시기
                if maps[dx][dy] == '0' and visited[dx][dy][status] == 0:
                    q.append((dx,dy,status))
                    visited[dx][dy][status] = visited[x][y][status] + 1
                # 벽 부시기
                if maps[dx][dy] == '1' and status == 0:
                    visited[dx][dy][1] = visited[x][y][0] + 1
                    q.append((dx, dy, 1))
    return -1


n, m = map(int, input().split())
maps = [[] for _ in range(n)]
for i in range(n):
    tmp = input().rstrip()
    for j in tmp:
        maps[i].append(j)
print(solution(n,m,maps))



def is_map(x,y,park):
    if x >=0 and x <= len(park)-1 and y >= 0 and y <= len(park[0])-1:
        return False
    return True

def solution(park, routes):
    move_types = {'W':(0,-1),'E':(0,1),'N':(-1,0),'S':(1,0)}
    
    answer = [0,0]
    block = []
    for idx1, x in enumerate(park):
        for idx2, y in enumerate(x):
            if y == "S":
                answer[0], answer[1] = idx1, idx2
            if y == "X":
                block.append((idx1,idx2))

    for route in routes:
        split_route = route.split()
        x, y = move_types[split_route[0]]
        lock = True
        dx, dy = 0, 0
        for i in range(1, int(split_route[1])+1):  
            dx, dy = x * i, y * i
            move = ((answer[0] + dx),(answer[1]+dy))
            if (move in block) or is_map((answer[0] + dx),(answer[1]+dy),park):
                lock = False
                break
        if lock:
            answer[0], answer[1] = answer[0] + dx, answer[1]+dy              
    return answer

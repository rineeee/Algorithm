from collections import deque
import sys
input = lambda: sys.stdin.readline().rstrip()

def bfs(x, y):
    dx = [1, -1, 0, 0, 1, -1, 1, -1]
    dy = [0, 0, -1, 1, -1, 1, 1, -1]
    board[x][y] = 0
    q = deque()
    q.append([x, y])
    while q:
        t_x, t_y = q.popleft()
        for i in range(8):
            nx = t_x + dx[i]
            ny = t_y + dy[i]
            if 0<= nx < h and 0 <= ny < w and board[nx][ny] == 1:
                board[nx][ny] = 0
                q.append([nx,ny])

while True:
    w, h = map(int, input().split())
    if w == 0 and h == 0:
        break
    board = []
    for _ in range(h):
        board.append(list(map(int, input().split())))
    count = 0
    for i in range(h):
        for j in range(w):
            if board[i][j] == 1:
                bfs(i,j)
                count += 1
    print(count)


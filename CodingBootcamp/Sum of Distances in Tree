class Solution(object):
    def sumOfDistancesInTree(self, n, edges):
        graph = [[] for _ in range(n)]
        for a, b in edges:
            graph[a].append(b)
            graph[b].append(a)
        
        def bfs(node):
            visited = set()
            path_sum = 0
            que = deque([node])
            path_len = 1
            while que:
                for _ in range(len(que)):
                    tmp = que.popleft()
                    visited.add(tmp)
                    for child in graph[tmp]:
                        if child not in visited:
                            path_sum += path_len
                            que.append(child)
                path_len += 1
            return path_sum

        return [bfs(i) for i in range(n)]

def solution(grid):
    answer = []
    n, m = len(grid), len(grid[0])
    dxy = [(-1,0),(0,1),(1,0),(0,-1)] # 상 우 하 좌 (시계방향)
    visited =[[[0,0,0,0] for _ in range(m)] for _ in range(n)]
    
    def solve(x,y,d):
        res = 0
        while not visited[x][y][d]:
            visited[x][y][d] = True
            x, y = (x+dxy[d][0]) % n, (y+dxy[d][1]) % m
            if grid[x][y] == 'L': d = (d+1) % 4
            elif grid[x][y] == 'R': d = (d-1) % 4
            res += 1
        return res
    
    for i in range(n):
        for j in range(m):
            for d in range(4):
                if not visited[i][j][d]:
                    answer.append(solve(i,j,d))
    answer.sort()
    return answer
